swagger: '2.0'
info:
  description: Набор сервисов для учета на предприятии /ООО Ромашка/
  version: "1.0.0"
  title: RestApi

produces:
  - application/json
  - application/xml
  - application/text

basePath: "/api"

paths:

  /reports/receipt/{format}:
    get:
      summary: Получить список рецептов
      operationId: main.reports_receipt
      produces:
        - application/text
      responses:
        200:
          description: OK
          schema:
            type: object
        500:
          description: Ошибка на сервере
        default:
          description: Неизвестная ошибка
    parameters:
      - name: format
        in: path
        description: Уникальный код формата
        required: true
        type: integer

  /reports/nomenclature/{format}:
    get:
      summary: Получить список номенклатур
      operationId: main.reports_nomenclature
      produces:
        - application/text
      responses:
        200:
          description: OK
          schema:
            type: object
        500:
          description: Ошибка на сервере
        default:
          description: Неизвестная ошибка
    parameters:
      - name: format
        in: path
        description: Уникальный код формата
        required: true
        type: integer

  /reports/group/{format}:
    get:
      summary: Получить список групп номенклатуры
      operationId: main.reports_group
      produces:
        - application/text
      responses:
        200:
          description: OK
          schema:
            type: object
        500:
          description: Ошибка на сервере
        default:
          description: Неизвестная ошибка
    parameters:
      - name: format
        in: path
        description: Уникальный код формата
        required: true
        type: integer

  /reports/range/{format}:
    get:
      summary: Получить список единиц измерения
      operationId: main.reports_range
      produces:
        - application/text
      responses:
        200:
          description: OK
          schema:
            type: object
        500:
          description: Ошибка на сервере
        default:
          description: Неизвестная ошибка
    parameters:
    - name: format
      in: path
      description: Уникальный код формата
      required: true
      type: integer

  /reports/formats:
    get:
      summary: Получить список форматов для отчетов
      operationId: main.formats
      produces:
        - application/json
      responses:
        200:
          description: OK
          schema:
            type: object
        500:
          description: Ошибка на сервере
        default:
          description: Неизвестная ошибка

  /api/filter/type:
    get:
      summary: Получить список типов фильтрации
      operationId: main.filter_type
      produces:
        - application/json
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              type: object
              properties:
                name:
                  type: string
                  description: Имя фильтра
                value:
                  type: integer
                  description: Значение фильтра
        500:
          description: Ошибка на сервере
        default:
          description: Неизвестная ошибка

  /api/filter/list/{domain}/{filter_type}:
    post:
      summary: Получить список данных, отфильтрованных по типу
      operationId: main.filter_data_list
      consumes:
        - application/json
      produces:
        - text/plain
      parameters:
        - name: domain
          in: path
          description: Уникальный код домена
          required: true
          type: string
        - name: filter_type
          in: path
          description: Тип фильтрации
          required: true
          type: string
        - name: body
          in: body
          description: JSON данные для фильтрации
          required: true
          schema:
            type: object
            additionalProperties: true
      responses:
        200:
          description: OK
          schema:
            description: Отфильтрованные данные
        400:
          description: Ошибка валидации данных
        500:
          description: Внутренняя ошибка сервера


  /api/warehouse_transaction/{filter_type}:
    post:
      summary: Get warehouse transaction
      operationId: main.get_warehouse_transaction
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        200:
          description: OK
          schema:
            type: object
        500:
          description: Ошибка на сервере
        default:
          description: Неизвестная ошибка
      parameters:
        - name: "filter_type"
          in: "path"
          description: "Тип фильтрации"
          required: true
          type: "string"
        - name: "body"
          in: "body"
          description: "JSON объект с двумя полями: object1 и object2"
          required: true
          schema:
            type: "object"
            required:
              - warehouse
              - nomenclature
            properties:
              warehouse:
                type: "object"
                description: "Первый объект для обработки"
                example: {  }
              nomenclature:
                type: "object"
                description: "Второй объект для обработки"
                example: {  }

  /api/warehouse_turnover/{filter_type}/{date}:
    post:
      summary: Получение данных об оборотах на складе.
      description: Создаёт и возвращает информацию о складских оборотах для заданного склада и номенклатуры.
      operationId: main.get_warehouse_turnover
      parameters:
        - name: "filter_type"
          in: "path"
          description: "Тип фильтрации"
          required: true
          type: "string"
        - name: "date"
          in: "path"
          description: "Дата в формате YYYY-MM-DD"
          required: true
          type: "string"
          format: "date"
        - name: "body"
          in: "body"
          description: "JSON объект с двумя полями: object1 и object2"
          required: true
          schema:
            type: "object"
            required:
              - warehouse
              - nomenclature
            properties:
              warehouse:
                type: "object"
                description: "Первый объект для обработки"
                example: { }
              nomenclature:
                type: "object"
                description: "Второй объект для обработки"
                example: { }
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        200:
          description: OK
          schema:
            type: object
        500:
          description: Ошибка на сервере
        default:
          description: Неизвестная ошибка


  /api/block_period:
    get:
      summary: Получить список рецептов
      operationId: main.get_block_period
      produces:
        - application/text
      responses:
        200:
          description: OK
          schema:
            type: object
        500:
          description: Ошибка на сервере
        default:
          description: Неизвестная ошибка



  /api/block_period/{block_period}:
    post:
      summary: Обновить период блокировки
      description: Обновляет значение block_period.
      operationId: main.update_block_period
      parameters:
        - name: block_period
          in: path
          required: true
          type: string
          description: Период блокировки, который нужно установить.
      produces:
        - application/text
      responses:
        '200':
          description: Успешное обновление периода блокировки
          schema:
            type: string
            example: "True"
        '400':
          description: Ошибка при обновлении периода блокировки
          schema:
            type: string
            example: "Exception: <описание ошибки>"


  /api/block_period/save:
    get:
      operationId: main.save_block_period
      produces:
        - application/json
      responses:
        200:
          description: OK
          schema:
            type: object
        500:
          description: Ошибка на сервере
        default:
          description: Неизвестная ошибка

  /api/nomenclature/get/{item_id}:
    get:
      operationId: main.nomenclature_get
      parameters:
        - name: item_id
          in: path
          required: true
          type: string
      produces:
        - application/text
      responses:
        200:
          description: OK
          schema:
            type: string
        404:
          description: "Элемент не найден"
        500:
          description: "Ошибка на сервере"

  /api/nomenclature/put:
    post:
      operationId: main.nomenclature_put
      consumes:
        - application/json
      parameters:
        - in: "body"
          name: "body"
          required: true
          schema:
            type: "object"
            additionalProperties: true
      produces:
        - application/text
      responses:
        200:
          description: "Элемент успешно создан"
          schema:
            type: "object"
        400:
          description: "Некорректные данные"
        500:
          description: "Ошибка на сервере"

  /api/nomenclature/patch:
    post:
      operationId: main.nomenclature_patch
      consumes:
        - application/json
      parameters:
        - in: "body"
          name: "body"
          description: "Данные для обновления элемента"
          required: true
          schema:
            type: string
            additionalProperties: true
      produces:
        - application/text
      responses:
        200:
          description: "Элемент успешно обновлен"
          schema:
            type: string
        400:
          description: "Некорректные данные"
        500:
          description: "Ошибка на сервере"

  /api/nomenclature/delete/{item_id}:
    delete:
      operationId: main.nomenclature_delete
      parameters:
        - name: item_id
          in: path
          required: true
          type: string
          description: "ID элемента номенклатуры"
      produces:
        - application/text
      responses:
        200:
          description: "Элемент успешно удален"
          schema:
            type: string
        404:
          description: "Элемент не найден"
        500:
          description: "Ошибка на сервере"


  /tbs/{start_date}/{end_date}/{warehouse}:
    get:
      operationId: main.get_TBS
      parameters:
        - name: start_date
          in: path
          required: true
          type: string
          format: date
        - name: end_date
          in: path
          required: true
          type: string
          format: date
        - name: warehouse
          in: path
          required: true
          type: string
      responses:
        200:
          description: "Данные TBS успешно получены"
          schema:
            type: string
        500:
          description: "Ошибка на сервере"

  /data_reposity/save:
    post:
      operationId: main.save_data_reposity
      responses:
        200:
          description: "Данные успешно сохранены"
        500:
          description: "Ошибка при сохранении данных"

  /data_reposity/read:
    post:
      operationId: main.read_data_reposity
      responses:
        200:
          description: "Данные успешно прочитаны"
        500:
          description: "Ошибка при чтении данных"